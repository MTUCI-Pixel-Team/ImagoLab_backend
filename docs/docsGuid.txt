    Документирование в проекте реализовано с помощью парсинга комментариев из текстовых файлов кода с расширением ".go". 
Чтобы программа видела ваши комментарии, необходимо добавить название папки, в которой вы работаете, в массив APPS, находящийся по пути /core/settings.go.
Папка должна находиться в корневой директории проекта или ниже по уровню (в таком случае в APPS лучше указывать путь, начиная с корневой папки).

    После регистрации приложения вы можете приступить к документированию ваших обработчиков. Комментарии не привязаны к функциям, 
поэтому располагать их можно в любом месте файла. Однако, для улучшения читаемости кода, рекомендуется писать их непосредственно перед обработчиком.

    Шаблон документирующего комментария выглядит следующим образом (* — обязательные поля):
/*
docs(
	name*:<name>;                           // Уникальное имя комментария для обрабочика
	tag: <tag>;                             // По тегу обработчики будут разделены на группы (па умолчанию "Other")
	path*: </any/route>;                    // Роут к обработчику (должен совпадать с роутом в регистрации)
	method*: <GET>;                         // Метод запроса   
	summary: <text>;                        // Краткое описание
	description: <text>;                    // Полное описание
	isAuth: <true/false>;                   // Требуется ли авторизция в запросе
	req_content_types: <conType>,<conType>; // Типы контента, поддерживаемые обработчиком
	requestbody: {                          /* 
		"key1": "<valueType>",                Ожидаемое тело запроса. Одинаковая сигнатура для json и formData.
		"key2": "<valueType>"                 Для передачи файлов в formData используйте type = file
	};                                      */
	resp_content_type: <conType>;           // Тип контента, возвращаемый обработчиком
	responsebody: {                         /*
		"key1": "<valueType>"                  Возвращаемое тело запроса
	};                                      */
)docs
*/
    Документирующие поля должны находиться между docs()docs. Для отступов лучше использовать табуляцию вместо пробелов, чтобы JSON корректно отображался в текстовом поле.
Каждый заголовок отделяется от предыдущего с помощью ";". В местах, где используется перечисление, можно использовать "," для разделения объектов.


